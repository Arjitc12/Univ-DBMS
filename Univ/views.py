from django.contrib.auth.decorators import login_requiredfrom django.http import HttpResponseRedirectfrom django.shortcuts import HttpResponse, render_to_response, get_object_or_404from django.shortcuts import render, redirectfrom django.urls import reversefrom django.views import genericfrom django.contrib.auth import authenticate, login, logoutfrom django.views import Viewfrom django.template import loaderfrom . import modelsfrom .models import StudentInfo# Create your views here.def display(request):    return render_to_response('StData.html', {'obj': models.StudentInfo.objects.all()})def Home_View(request):    return render(request, "conbusi/index.html", {})def register(request):    if request.method == 'POST':        Sid = request.POST.get("Sid")        Name = request.POST.get("Name")        Dept = request.POST.get("Dept")        Credit = request.POST.get("Credit")        student_info = StudentInfo.objects.create(Sid=Sid, Name=Name, Dept=Dept, Credit=Credit)        student_info.save()    return render(request, "test.html")def user_login(request):    context = {}    if request.method == "POST":        username = request.POST['username']        password = request.POST['password']        user = authenticate(request, username=username, password=password)        if user:            login(request, user)            if request.GET.get('next', None):                return HttpResponseRedirect(request.GET['next'])            return HttpResponseRedirect(reverse('user_success'))        else:            context["error"] = "Provide valid credentials !!"            return render(request, "index.html", context)    else:        return render(request, "index.html", context)@login_required(login_url="/login/")def success(request):    context = {'user': request.user}    return render(request, "success.html", context)def user_logout(request):    logout(request)    return HttpResponseRedirect(reverse('user_login'))def St_delete(request, id):    obj = get_object_or_404(StudentInfo, id=id)    if request.method == "POST":        obj.delete()        context={            "object":obj        }        return render(request,)